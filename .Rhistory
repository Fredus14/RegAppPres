m=32
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 24
m=32
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 25
m=32
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 26
m=64
k=1
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 27
m=64
k=3
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 28
m=64
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 29
m=64
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 30
m=64
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 31
m=128
k=1
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 32
m=128
k=3
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 33
m=128
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 34
m=128
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 35
m=128
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 36
m=256
k=1
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 37
m=256
k=3
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 38
m=256
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 39
m=256
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 40
m=256
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 41
m=512
k=1
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 42
m=512
k=3
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 43
m=512
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 44
m=512
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 45
m=512
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 46
m=1024
k=1
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 47
m=1024
k=3
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 48
m=1024
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 49
m=1024
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 50
m=1024
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 51
m=2048
k=1
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 52
m=2048
k=3
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 53
m=2048
k=5
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 54
m=2048
k=7
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
# 55
m=2048
k=9
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
errors = apply(params,1,function(param){
k =  param[1]
m =  param[2]})
errors
errors = apply(params,1,function(param){
k =  param[1]
m =  param[2]}
list(k,m))
errors = apply(params,1,function(param){
k =  param[1]
m =  param[2]}
list=c(k,m))
errors = apply(params,1,function(param){
k =  param[1]
m =  param[2]
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
})
params[which.min(errors),]
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("bottomleft",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
pvals = rowttests(t(X),factor(y))$p.val
errors = apply(params,1,function(param){
k =  param[1]
m =  param[2]
result = sapply(idx,function(ind){
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
})
params[which.min(errors),]
##make a plot and confirm its just one min:
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
k=5;m=2
res <- sapply(seq_along(idx), function(i) {
# loop over each of the 10 cross-validation folds
# predict the held-out samples using k nearest neighbors
ind = idx[[i]]
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:8]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=5)
sum(predict!=y[ind])
})
sum(res)/24
k=5
m=2
res <- sapply(seq_along(idx), function(i) {
# loop over each of the 10 cross-validation folds
# predict the held-out samples using k nearest neighbors
ind = idx[[i]]
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:2]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=5)
sum(predict!=y[ind])
})
sum(res)/24
head(params)
k=1
m=2
res <- sapply(seq_along(idx), function(i) {
# loop over each of the 10 cross-validation folds
# predict the held-out samples using k nearest neighbors
ind = idx[[i]]
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(res)/24
k=1
m=3
res <- sapply(seq_along(idx), function(i) {
# loop over each of the 10 cross-validation folds
# predict the held-out samples using k nearest neighbors
ind = idx[[i]]
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(res)/24
k=9
m=16
res <- sapply(seq_along(idx), function(i) {
# loop over each of the 10 cross-validation folds
# predict the held-out samples using k nearest neighbors
ind = idx[[i]]
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(res)/24
min(errors)
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
ms
y = factor(as.numeric(format( sampleInfo$date, "%m")=="06"))
errors = apply(params,1,function(param){
k =  param[1]
m =  param[2]
result = sapply(idx,function(ind){
pvals = rowttests(t(X[-ind,]),factor(y[-ind]))$p.val
ind2 = order(pvals)[1:m]
predict=knn(X[-ind,ind2],X[ind,ind2],y[-ind],k=k)
sum(predict!=y[ind])
})
sum(result)/length(y)
})
params[which.min(errors),]
##make a plot and confirm its just one min:
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
min(errors)
min(errors)
errors = matrix(errors,5,11)
library(rafalib)
mypar2(1,1)
matplot(ms,t(errors),type="l",log="x")
legend("topright",as.character(ks),lty=seq_along(ks),col=seq_along(ks))
publish_rpubs("Regression Model Analyser", html_file = "index.html")
library(slidify)
library(slidify)
publish_rpubs("Regression Model Analyser", html_file = "index.html")
setwd("~/Documents/Online_Courses/Data_Science/9-Developing_Data_Products/Project/RegAppPres")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
setwd("~/Documents/Online_Courses/Data_Science/9-Developing_Data_Products/Project/RegAppPres")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
publish_rpubs("Regression Model Analyser", html_file = "index.html")
